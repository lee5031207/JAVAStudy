<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mybatis="http://mybatis.org/schema/mybatis-spring"
	xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
	http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring.xsd">
	
	<!-- Root Context: defines shared resources visible to all other web components -->
	
	
	<!-- MyBatis설정 -->
	<!-- 1. Oracle DB연동하기 위해 dataSource라는 빈 등록(set메서드활용) -->
	<!-- setUrl, setUsername, setPassword, setDriverClassName -->
	<bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource">
		<property name="url" value="jdbc:oracle:thin:@localhost:1521:xe" />
		<property name="username" value="bookmanager" />
		<property name="password" value="user11" />
		<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver" />
	</bean>
	
	<!-- 2. sqlSessionFactory객체 생성-->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
	  <property name="dataSource" ref="dataSource" />
	  <property name="configLocation" value="classpath:mybatis/config.xml"></property>
	</bean>
	
 	<!-- 3. Dao역할을 하는 Mapper를 찾아와 붙여준다. ->InterfaceMapper로 하는 설정 
	<bean id="userMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
	  <property name="mapperInterface" value="com.spring.mybatis.member.model.dao.MemberMapper" />
	  <property name="sqlSessionFactory" ref="sqlSessionFactory" />
	</bean> -->
	
	<!-- 3. 설정 정보를 가지고 있는 factory를 사용해서 sqlSessionTemplate 생성  -> XML파일로 하는 설정
 	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
	  <constructor-arg index="0" ref="sqlSessionFactory" />
	</bean> -->
	
	<mybatis:scan base-package="com.spring.mybatis" annotation="org.apache.ibatis.annotations.Mapper"/>
	
	
	
</beans>
