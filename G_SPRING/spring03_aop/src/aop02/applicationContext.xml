<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">


	<!-- 
		AOP용어
		Aspect(Advisor) : 1. 공통 관심사 // 2. Advice + Pointcuts
		Advice : 공통 관심사를 모듈화한 객체
		Join points : 공통 관심사를 적용할 수 있는 모든 대상
					  Spring에서는 bean으로 등록된 모든 객체의 메서드
		Pointcuts : Join points 중 실제로 Advice가 적용 될 대상
		target : Pointcuts을 가진 객체
		Weaving : Advice와 target을 결합해 프록시 객체를 생성하는 과정
		Proxy : Advice와 target이 결합되어 만들어진 프록시 객체
	 -->	
	 
	<context:component-scan base-package="aop02" />
	
	<!-- 프록시 생성 을 자동으로 해준다? -->
	<aop:aspectj-autoproxy />
	
	<aop:config>
		<aop:aspect ref="myAdvice">
			<aop:before method="before" pointcut="execution(* aop02.*.*(..))"/> 
			<aop:after method="after" pointcut="execution(* aop02.*.*(..))"/>
			<aop:after-throwing method="afterThrowing" pointcut="execution(* aop02.*.*(..))"/>
		</aop:aspect>
	</aop:config>




</beans>
